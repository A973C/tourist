// Generated by CoffeeScript 1.6.2
(function() {
  BasicTipTests('with Tourist.Tip.Bootstrap', function() {
    return new Tourist.Tip.Bootstrap({
      model: this.model
    });
  });

  BasicTourTests('with Tourist.Tip.Bootstrap', function() {
    return new Tourist.Tour({
      stepOptions: this.options,
      steps: this.steps,
      cancelStep: this.finalQuit,
      successStep: this.finalSucceed,
      tipClass: 'Bootstrap'
    });
  });

  describe("Tourist.Tip.BootstrapTip", function() {
    beforeEach(function() {
      loadFixtures('tour.html');
      return this.s = new Tourist.Tip.BootstrapTip();
    });
    afterEach(function() {
      return this.s.destroy();
    });
    describe('hide/show', function() {
      it('initially hidden', function() {
        return expect(this.s.el).toHide();
      });
      it('hide works', function() {
        this.s.show();
        this.s.hide();
        return expect(this.s.el).toHide();
      });
      return it('show works', function() {
        this.s.show();
        return expect(this.s.el).toShow();
      });
    });
    return describe('positioning', function() {
      it('setPosition will not show the tip', function() {
        var el;

        expect(this.s.el).toHide();
        el = $('#target-one');
        this.s.setPosition(el, 'top center', 'bottom center');
        return expect(this.s.el).toHide();
      });
      return it('setPosition keeps the tip shown', function() {
        var el;

        this.s.show();
        el = $('#target-one');
        this.s.setPosition(el, 'top center', 'bottom center');
        return expect(this.s.el).toShow();
      });
    });
  });

}).call(this);
